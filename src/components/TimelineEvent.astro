---
export interface Props {
  year?: string;
  title?: string;
  margins?: string;
  classes?: string;
  highlight?: boolean;
  label?: string;
}

const { year, title, margins, classes, highlight, label } = Astro.props;

---

<li class={`tl-event relative block w-full sm:max-w-[445px] ${margins ? margins : 'mt-4 lg:mt-16 first:mt-0'} ${classes}`} data-inviewport>

  <div class={`relative overflow-hidden rounded-xl border ${highlight ? 'border-grey-900' : 'border-dashed border-grey-300'} p-6`}>

    <p class="font-medium"><span class="text-xl">{year}</span> - {title}</p>

    <div class="text-grey-700 mt-2 empty:mt-0"><slot /></div>

    {label && (
      <span class="absolute top-0 right-0 text-xs/tight rounded-bl border-l border-b border-grey-900 text-grey-900 pl-1 pr-2 py-1">{label}</span>
    )}

  </div>

  <span class={`tl-event-line absolute top-1/2 right-full lg:left-full w-4 sm:w-[15%] lg:w-[11%] xl:w-[19.5%] h-0 border-b ${highlight ? 'border-grey-900' : 'border-dashed border-grey-300'} origin-left lg:origin-right`}></span>

</li>

<style>
  @media screen and (min-width: 1024px) {
    .tl-event:nth-child(2n) .tl-event-line {
      @apply left-auto right-full origin-left;
    }
  }

  .tl-event > div {
    opacity: 0;
    transform: scale(0.5) translateX(-50%);
    transition: .6s .2s;
  }

  .tl-event.in-viewport > div {
    opacity: 1;
    transform: scale(1) translateX(0);
  }

  .tl-event:nth-child(2n) > div {
    transform: scale(0.5) translateX(50%);
  }

  .tl-event.in-viewport:nth-child(2n) > div {
    transform: scale(1) translateX(0);
  }

  .tl-event-line {
    transform: scaleX(0);
    transition: .8s .1s;
  }

  .tl-event.in-viewport .tl-event-line {
    transform: scaleX(1);
  }
</style>